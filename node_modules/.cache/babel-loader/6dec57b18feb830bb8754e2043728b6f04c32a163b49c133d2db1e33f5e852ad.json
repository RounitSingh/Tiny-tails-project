{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\01-starting-setup\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [histogramData, setHistogramData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchData = async () => {\n    setIsLoading(true);\n    const response = await axios.get('https://www.terriblytinytales.com/test.txt');\n    const text = response.data;\n    const words = text.split(/\\s+/);\n    const frequencyMap = {};\n    words.forEach(word => {\n      if (frequencyMap[word]) {\n        frequencyMap[word]++;\n      } else {\n        frequencyMap[word] = 1;\n      }\n    });\n    const sortedFrequency = Object.entries(frequencyMap).sort((a, b) => b[1] - a[1]);\n    const top20Words = sortedFrequency.slice(0, 20);\n    const histogramData = top20Words.map(_ref => {\n      let [word, frequency] = _ref;\n      return {\n        word,\n        frequency\n      };\n    });\n    setHistogramData(histogramData);\n    setIsLoading(false);\n  };\n  const exportData = () => {\n    const csvData = histogramData.map(_ref2 => {\n      let {\n        word,\n        frequency\n      } = _ref2;\n      return `${word},${frequency}`;\n    }).join('\\n');\n    const blob = new Blob([csvData], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'histogram.csv');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: fetchData,\n      disabled: isLoading,\n      children: isLoading ? 'Loading...' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), histogramData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(BarChart, {\n          width: 600,\n          height: 300,\n          data: histogramData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"frequency\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportData,\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"a2drAi3XLcWCXnC0gW/1DXDTT1g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","App","_s","histogramData","setHistogramData","isLoading","setIsLoading","fetchData","response","get","text","data","words","split","frequencyMap","forEach","word","sortedFrequency","Object","entries","sort","a","b","top20Words","slice","map","_ref","frequency","exportData","csvData","_ref2","join","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","children","className","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","length","width","height","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["D:/react/01-starting-setup/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './index.css';\n function App() {\n  const [histogramData, setHistogramData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n   const fetchData = async () => {\n    setIsLoading(true);\n    const response = await axios.get('https://www.terriblytinytales.com/test.txt');\n    const text = response.data;\n    const words = text.split(/\\s+/);\n    const frequencyMap = {};\n    words.forEach((word) => {\n      if (frequencyMap[word]) {\n        frequencyMap[word]++;\n      } else {\n        frequencyMap[word] = 1;\n      }\n    });\n    const sortedFrequency = Object.entries(frequencyMap).sort((a, b) => b[1] - a[1]);\n    const top20Words = sortedFrequency.slice(0, 20);\n    const histogramData = top20Words.map(([word, frequency]) => ({ word, frequency }));\n    setHistogramData(histogramData);\n    setIsLoading(false);\n  };\n   const exportData = () => {\n    const csvData = histogramData.map(({ word, frequency }) => `${word},${frequency}`).join('\\n');\n    const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'histogram.csv');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n   return (\n    <div>\n      <button className='button'onClick={fetchData} disabled={isLoading}>\n        {isLoading ? 'Loading...' : 'Submit'}\n      </button>\n      {histogramData.length > 0 && (\n       <div className='chart1'>\n       <div>\n          <BarChart width={600} height={300} data={histogramData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"word\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"frequency\" fill=\"#8884d8\" />\n          </BarChart>\n          <button onClick={exportData}>Export</button>\n        </div></div>\n        \n      )}\n    </div>\n  );\n}\n export default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACtF,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAChD,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC7BD,YAAY,CAAC,IAAI,CAAC;IAClB,MAAME,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,4CAA4C,CAAC;IAC9E,MAAMC,IAAI,GAAGF,QAAQ,CAACG,IAAI;IAC1B,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,KAAK,CAAC;IAC/B,MAAMC,YAAY,GAAG,CAAC,CAAC;IACvBF,KAAK,CAACG,OAAO,CAAEC,IAAI,IAAK;MACtB,IAAIF,YAAY,CAACE,IAAI,CAAC,EAAE;QACtBF,YAAY,CAACE,IAAI,CAAC,EAAE;MACtB,CAAC,MAAM;QACLF,YAAY,CAACE,IAAI,CAAC,GAAG,CAAC;MACxB;IACF,CAAC,CAAC;IACF,MAAMC,eAAe,GAAGC,MAAM,CAACC,OAAO,CAACL,YAAY,CAAC,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,MAAME,UAAU,GAAGN,eAAe,CAACO,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC/C,MAAMrB,aAAa,GAAGoB,UAAU,CAACE,GAAG,CAACC,IAAA;MAAA,IAAC,CAACV,IAAI,EAAEW,SAAS,CAAC,GAAAD,IAAA;MAAA,OAAM;QAAEV,IAAI;QAAEW;MAAU,CAAC;IAAA,CAAC,CAAC;IAClFvB,gBAAgB,CAACD,aAAa,CAAC;IAC/BG,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EACA,MAAMsB,UAAU,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAO,GAAG1B,aAAa,CAACsB,GAAG,CAACK,KAAA;MAAA,IAAC;QAAEd,IAAI;QAAEW;MAAU,CAAC,GAAAG,KAAA;MAAA,OAAM,GAAEd,IAAK,IAAGW,SAAU,EAAC;IAAA,EAAC,CAACI,IAAI,CAAC,IAAI,CAAC;IAC7F,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,OAAO,CAAC,EAAE;MAAEK,IAAI,EAAE;IAA0B,CAAC,CAAC;IACrE,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IACrC,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGN,GAAG;IACfG,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,eAAe,CAAC;IAC9CH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;IACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;EACjC,CAAC;EACA,oBACCtC,OAAA;IAAA+C,QAAA,gBACE/C,OAAA;MAAQgD,SAAS,EAAC,QAAQ;MAAAC,OAAO,EAAE1C,SAAU;MAAC2C,QAAQ,EAAE7C,SAAU;MAAA0C,QAAA,EAC/D1C,SAAS,GAAG,YAAY,GAAG;IAAQ;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EACRnD,aAAa,CAACoD,MAAM,GAAG,CAAC,iBACxBvD,OAAA;MAAKgD,SAAS,EAAC,QAAQ;MAAAD,QAAA,eACvB/C,OAAA;QAAA+C,QAAA,gBACG/C,OAAA,CAACR,QAAQ;UAACgE,KAAK,EAAE,GAAI;UAACC,MAAM,EAAE,GAAI;UAAC9C,IAAI,EAAER,aAAc;UAAA4C,QAAA,gBACrD/C,OAAA,CAACJ,aAAa;YAAC8D,eAAe,EAAC;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvCtD,OAAA,CAACN,KAAK;YAACiE,OAAO,EAAC;UAAM;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxBtD,OAAA,CAACL,KAAK;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACTtD,OAAA,CAACH,OAAO;YAAAsD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACXtD,OAAA,CAACF,MAAM;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACVtD,OAAA,CAACP,GAAG;YAACkE,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC;UAAS;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACXtD,OAAA;UAAQiD,OAAO,EAAErB,UAAW;UAAAmB,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAEZ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpD,EAAA,CAvDSD,GAAG;AAAA4D,EAAA,GAAH5D,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}